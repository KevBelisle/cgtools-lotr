/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as CardsCardSlugImport } from './routes/cards/$card-slug'
import { Route as CardsSearchIndexImport } from './routes/cards/search/index'
import { Route as CardsSearchAdvancedImport } from './routes/cards/search/advanced'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const CardsCardSlugRoute = CardsCardSlugImport.update({
  id: '/cards/$card-slug',
  path: '/cards/$card-slug',
  getParentRoute: () => rootRoute,
} as any)

const CardsSearchIndexRoute = CardsSearchIndexImport.update({
  id: '/cards/search/',
  path: '/cards/search/',
  getParentRoute: () => rootRoute,
} as any)

const CardsSearchAdvancedRoute = CardsSearchAdvancedImport.update({
  id: '/cards/search/advanced',
  path: '/cards/search/advanced',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/cards/$card-slug': {
      id: '/cards/$card-slug'
      path: '/cards/$card-slug'
      fullPath: '/cards/$card-slug'
      preLoaderRoute: typeof CardsCardSlugImport
      parentRoute: typeof rootRoute
    }
    '/cards/search/advanced': {
      id: '/cards/search/advanced'
      path: '/cards/search/advanced'
      fullPath: '/cards/search/advanced'
      preLoaderRoute: typeof CardsSearchAdvancedImport
      parentRoute: typeof rootRoute
    }
    '/cards/search/': {
      id: '/cards/search/'
      path: '/cards/search'
      fullPath: '/cards/search'
      preLoaderRoute: typeof CardsSearchIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/cards/$card-slug': typeof CardsCardSlugRoute
  '/cards/search/advanced': typeof CardsSearchAdvancedRoute
  '/cards/search': typeof CardsSearchIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/cards/$card-slug': typeof CardsCardSlugRoute
  '/cards/search/advanced': typeof CardsSearchAdvancedRoute
  '/cards/search': typeof CardsSearchIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/cards/$card-slug': typeof CardsCardSlugRoute
  '/cards/search/advanced': typeof CardsSearchAdvancedRoute
  '/cards/search/': typeof CardsSearchIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/cards/$card-slug'
    | '/cards/search/advanced'
    | '/cards/search'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/cards/$card-slug' | '/cards/search/advanced' | '/cards/search'
  id:
    | '__root__'
    | '/'
    | '/cards/$card-slug'
    | '/cards/search/advanced'
    | '/cards/search/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CardsCardSlugRoute: typeof CardsCardSlugRoute
  CardsSearchAdvancedRoute: typeof CardsSearchAdvancedRoute
  CardsSearchIndexRoute: typeof CardsSearchIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CardsCardSlugRoute: CardsCardSlugRoute,
  CardsSearchAdvancedRoute: CardsSearchAdvancedRoute,
  CardsSearchIndexRoute: CardsSearchIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/cards/$card-slug",
        "/cards/search/advanced",
        "/cards/search/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/cards/$card-slug": {
      "filePath": "cards/$card-slug.tsx"
    },
    "/cards/search/advanced": {
      "filePath": "cards/search/advanced.tsx"
    },
    "/cards/search/": {
      "filePath": "cards/search/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
